#+TITLE:   evil-tex
#+DATE:    February 1, 2020
#+STARTUP: inlineimages nofold

LaTeX text objects for =evil-mode= that work well with =evil-surround=.
Successor of  [[https://github.com/hpdeifel/evil-latex-textobjects][evil-latex-textobjects]]
* Table of Contents :TOC_3:noexport:
- [[#incomplete-showcase][Incomplete Showcase]]
- [[#installation][Installation]]
- [[#overview][Overview]]
  - [[#text-objects][Text Objects]]
  - [[#toggling][Toggling]]
  - [[#nontrivial-behaviours][Nontrivial behaviours:]]
- [[#configuration][Configuration]]
  - [[#binding-new-envsaccents-to-the-keymaps][Binding new envs/accents to the keymaps]]
  - [[#options-to-enable-and-disable][Options to enable and disable]]
- [[#appendix][Appendix]]
  - [[#environment-keymap][Environment keymap]]
  - [[#cdlatex-accent-keymap][cdlatex accent keymap]]
  - [[#delimiter-keymap][Delimiter keymap]]

* Incomplete Showcase
=|= marks point.

=\ti|lde{h}= -> cic /(change inner command)/ -> =\tilde{|}=

=\tilde{h|}= -> cscc bar SPC /(change surrounding command to =bar=)/ -> =\bar{h}=

=\(\sum_{i=1}^{n} i^2|\)= -> cim /(change inner math)/ -> =\(|\)=

=\(\sum_{i=1}^{n} i^2|\)= -> csmM /(change surrounding math to display)/ -> =\[\sum_{i=1}^{n} i^2|\]=

=\[a|^2\]= -> csmeA /(change surrounding math to environment =align*=)/ ->
=\begin{align*}\n a^2 \n\end{align}=

=(\mu|_\nu)= -> csddP /(change surrounding delimiter to =\left(=)/ -> =\left(\mu|_\nu\right)=
* Installation
Until this package's on MELPA, clone it and put it in your load path and hook it
to ~LaTeX-mode-hook~. Sorry ¯\_(ツ)_/¯
* Overview
** Text Objects
This package defines an increasing number of text objects:
| Key | Abbreviation    | Text Object Target                                                       | Surround behavior                          |
|-----+-----------------+--------------------------------------------------------------------------+--------------------------------------------|
| ~c~ | command         | TeX marcos: ~\foo{...}~                                                  | Prompts you for a macro                    |
| ~e~ | environment     | ~\begin{...}~ ~\end{...}~ blocks                                         | Prompts you with [[#environment-keymap][the env keymap]]            |
| ~m~ | math            | Both inline ~\( \)~ and display ~\[ \]~.                                 | Surrounds with ~\( \)~                     |
| ~M~ | Display math    | N/A                                                                      | Surrounds with ~\[ \]~                     |
| ~$~ | dollar          | Old TeX inline maths. [[https://tex.stackexchange.com/questions/510/are-and-preferable-to-dollar-signs-for-math-mode][Though you should probably use \(\)]].               |                                            |
| ~d~ | delimiters      | Math delimiters, ~(foo), \left(foo\right), [foo], \left[foo\right]~ etc. | Prompts you with [[#delimiter-keymap][the delim keymap]]          |
| ~S~ | sections        | LaTeX parts, chapters, ((sub)jjkksections, and (sub)paragraphs           |               |
| ~;~ | [[#cdlatex-accent-keymap][CDLaTeX accents]] | N/A                                                                      | Prompts you with [[#cdlatex-accent-keymap][the cdlatex accent keymap]] |
| ~^~ | superscript     | ~x^a~ ~x^\alpha~ ~x^{...}~                                               | Surrounds with ~^{ }~                      |
| ~_~ | subscript       | ~x_a~ ~x_\alpha~ ~x_{...}~                                               | Surroudns with ~_{ }~                      |

The full text object definitions are as follows:

#+BEGIN_SRC LaTeX
    \foobar{barbaz}     \foobar{barbaz}
    └─────────────┘             └────┘
           ac                     ic

   ┌\begin{foobar}     \begin{foobar}
   │                  ┌
 ae│ baz            ie│ baz
   │                  └
   └\end{foobar}       \end{foobar}

   \(foobar\)    \(foobar\)
   └────────┘      └────┘
       am            im

   (foobar)    (foobar)    \left(foobar\right)    \left(foobar\right)
   └──────┘     └────┘     └─────────────────┘          └────┘
      ad          id               ad                     id

    ┌\section{foo}          \section{foo}
    │                      ┌
  aS│ baz                iS│ baz
    └                      └
     \subsection{bar}       \subsection{bar}

    a^{foo}    a^{foo}    a^b    a^b    a^\bar    a^\bar
     └────┘       └─┘      └╵      ╵     └───┘      └──┘
#+END_SRC LaTeX
Note that the above rendering might bug out on mobile.
** Toggling
There are a few operations one might want to do frequently, but not want to
press many keys for. To this end we provide a few toggles, bound by default to
=qt*= (for =que toggle=), as you have 25 other macros to choose from. For vimtex users, or people
who don't like the letter =s=, we also provide the ability to map the toggles to
=ts*= instead, e.g. instead of =qtd= toggling delimiters, =tsd= will. See
[[#configuration][configuration]]. the provided toggles are:

| Key | Abbreviation | Behaviour                                                                   |
|-----+--------------+-----------------------------------------------------------------------------|
| qtc | command      | toggle asterisk on command, e.g. =\foo= and =\foo*=                         |
| qtd | delimiter    | toggle between delimiter autosizing, e.g.  =(foo)= and =\left(foo\right)=   |
| qte | environment  | toggle enviornment asterisk e.g. =\begin{equation}= and =\begin{equation*}= |
| qtm | math         | toggle between inline and display math, i.e. =\(foo\)= and =\[foo\]=        |
| qtS | section      | toggle section text object asterisk, e.g. =\chapter{}= and =\chapter*{}=    |
** Nontrivial behaviours:
- TODO As illustrated, the =S= text object treets the begining of all
  =\(sub)*section='s equally. However, If you want to manipulate a section with all
  of it's included subsections, you can do this performing the operations while
  the cursor is on the section command itself, e.g. =\section{f|oo}=
- By default, the newline proceeding ~\begin{...}~ and preceding ~\end{...}~ is
  selected as part of the delimiter. This way, when doing =cie= you're placed on a
  separate line, and surrounding with envs would force separate lines for ~\begin~,
  inner text, and ~\end~.

* Configuration
** Binding new envs/accents to the keymaps
Should be done by setting ~evil-tex-user-env-map-generator-alist~ or
~evil-tex-user-cdlatex-accents-map-generator-alist~. For example, to add default
position for figures:
#+BEGIN_SRC emacs-lisp
(setq evil-tex-user-env-map-generator-alist
      '(("f" "\\begin{figure}[!ht]\n" . "\n\\end{figure}")))
#+END_SRC
To add your own accent to ~evil-tex-user-cdlatex-accents-map-generator-alist~:
#+BEGIN_SRC emacs-lisp
(setq evil-tex-user-cdlatex-accents-map-generator-alist
      '(("b" "mathbb")))
#+END_SRC
Same for ~evil-tex-user-cdlatex-accents-map-generator-alist~. The exact format
is documented under the variable ~evil-tex-user-env-map-generator-alist~
** Options to enable and disable
- If you don't want the  ~\begin{...}~ newline behaviour discribed above,
  set ~evil-tex-select-newlines-with-envs~ to ~nil~.
- The toggle bindings are set by default to =qt*=. To turn this off and regain
  the invaluable =qt= macro binding, set ~evil-tex-toggle-override-q~ to ~nil~.
- In order to map the toggle bindings to =ts*=, set ~evil-tex-toggle-override-t~
  to ~t~.

*Make sure to set these variables before evil-TeX is loaded!*

* Appendix
** Environment keymap
Giving a prefix argument would prompt for options.
| Category                  | env         | key alias |
|---------------------------+-------------+-----------|
| Generic                   | prompt user | x         |
|---------------------------+-------------+-----------|
| Built In                  | equation    | e         |
|                           | equation*   | E         |
|                           | figure      | f         |
|                           | itemize     | i         |
|                           | enumerate   | I         |
| AmsMath                   | align       | a         |
|                           | align*      | A         |
|                           | alignat     | n         |
|                           | alignat*    | N         |
|                           | eqnarray    | r         |
|                           | flalign     | l         |
|                           | flalign*    | L         |
|                           | gather      | g         |
|                           | gather*     | G         |
|                           | multline    | m         |
|                           | multline*   | M         |
|                           | cases       | c         |
| Common Theorems, prefix t | axiom       | ta        |
|                           | corollary   | tc        |
|                           | definition  | td        |
|                           | examples    | te        |
|                           | exercise    | ts        |
|                           | lemma       | tl        |
|                           | proof       | tp        |
|                           | question    | tq        |
|                           | remark      | tr        |
|                           | theorem     | tt        |
** cdlatex accent keymap
See [[https://github.com/cdominik/cdlatex/blob/a5cb624ef/cdlatex.el#L141][cdlatex]]. "style?" implies that the braces come before the macro, e.g
={\displaystyle ...}=
| key | macro             | style? |
|-----+-------------------+--------|
| .   | dot               |        |
| :   | ddot              |        |
| ~   | tilde             |        |
| N   | widetilde         |        |
| ^   | hat               |        |
| H   | widehat           |        |
| -   | bar               |        |
| T   | overline          |        |
| _   | underline         |        |
| {   | overbrace         |        |
| }   | underbrace        |        |
| >   | vec               |        |
| /   | grave             |        |
| \   | acute             |        |
| v   | check             |        |
| u   | breve             |        |
| m   | mbox              |        |
| c   | mathcal           |        |
| r   | mathrm/textrm     |        |
| i   | mathit/textit     |        |
| l   | NONE!!/textsl     |        |
| b   | mathbf/textbf     |        |
| e   | mathem/emph       |        |
| y   | mathtt/texttt     |        |
| f   | mathsf/textsf     |        |
| 0   | textstyle         |        |
| 1   | displaystyle      | yes    |
| 2   | scriptstyle       | yes    |
| 3   | scriptscriptstyle | yes    |
** Delimiter keymap
| key | delimiter                      |
|-----+--------------------------------|
| b   | ~[foo]~                         |
| B   | ~\left[foo\right]~               |
| c   | ~\{foo\}~                        |
| C   | ~\left\{foo\right\}~             |
| r   | ~\langle foo\rangle~             |
| R   | ~\left\langle foo \right\langle~ |
| p   | ~(foo)~                          |
| P   | ~\left(foo\right)~               |
