#+TITLE: todo

* Features
** Text Objects
For environments, commands/macros, inline & display math
*** DONE Steal [[https://github.com/hpdeifel/evil-latex-textobjects][evil-latex-textobjects]]
*** Make Text Objects Work with Surround
Embrace doesn't work as we'd like it to; its REGEX doesn't recognize nested structures
correctly.

Our options, sorted:
1. Make surround work with our text objects
2. Just do what embrace does ourselves
3. Ditch surround and define the behavior of =cse= ourselves. We do need
   surround to work with other text objects though, so its not a real solution.
   However, if we define =cse= ourselves we can have fancy features, like
   highlighting the environment being worked on.
4. Re-define embrace to work with ~begend~ functions

** General delimiter text object, with integration to evil-surround/evil-embrace
Doing these seems tough. I couldn't merge \) \] with $.
However, just matching a regex to =\left[...] \right[...]= probably wouldn't be hard.
** Environment changing
This is the =csd/cse/tsd/tse= commands from vimtex
*** DONE Vimtex way - minibuffer
Just through a prompt. That would be through the minibuffer in Emacs.
*** TODO Using an alias table
  After doing =cse= you would will be able to enter one letter aliases to
  immediately change the enviornment, e.g. =csea= for changing to =align=, or
  =cseE= for changing to =equation*=.
  - One mapping, e.g. =csez=, will be reserved for *entering a prompt* so you can
    fully type out the thing.
  - This is a very vimish way: i.e =csea= would be mapped to ~align~ environment
  - Aliases would be *customizable*
  - Have a *Menu for an overview* of the aliases
** Folding
- Environments
- Sections, subsections...
- Have an org-like cycle functionality
** evil-surround like bindings which support toggling inline-outline math
Also support changing =\)= =\]= to =begin{align}= and so on. We can use
~texmathp-environments~ for selection.
** DONE CDLaTeX-tab-like movement (implemented already)

* Proposed
- change inside/around sub/superscript =ci^ ci_= which would jump to the closest
  sub/superscript
  - Would not work with surround-stuff, only =c/d= commands. Just thought it
    might be useful (Say you quickly want to change a sigma index...)
- Support math environments (=begin{align}=...) with our math text objects
  - Use =tsm= to toggle between =begin{align}= and =begin{equation}= (It already
    toggles between =\(\)= and =\[\]=)

    I don't use =begin{equation}= at all, only =\[\]=. In amsmath, =\[\]= are
    defined just to yield a =begin{equation*}...=. If we support toggling
    only =equation= and =align=, getting from =\[\]= to =align= wouldn't be nice.

- not sure if we should have explanations for the surround stuff, the toggle
  stuff is non trivial but it would probably be ehough to just mention that the
  e,c,m,d text objects are compatible with evil-surround. We probably only need
  to give an example.

* Rejected
** Merge \) \] math text objects with $ math text objects
I can't make it work. Anyway using $$ is supposed to be bad practice anyway.
https://tex.stackexchange.com/q/510/
* Far Future
** Mark the environment being changed while user changing it
This is exactly what [[https://github.com/edkolev/evil-goggles][evil-goggles]] does. We can either:
- Just add a similar functionality to our plugin
- Add an optional integration to evil-goggles in this repo
- Add an integration with goggles in the goggles plugin (this sounds odd but
  goggles has built-in integration with evil-surround and other plugins)

** Using [[https://github.com/hlissner/evil-multiedit][evil-multiedit]] to change environments
Would be slow compared to aliases.

* Appendix
** Keybinds
| Mode         | Keybind    | Action                                                                               |
|--------------+------------+--------------------------------------------------------------------------------------|
| Normal       | =csd=      | Change surrounding delimiter (see id/ad)                                             |
|              | =cse=      | Change environment                                                                   |
|              | =csc=      | Change command (should be acessable from any brace e.g. ==\frac{}{:}==)              |
|              | =tsd=      | Toggle surrounding delimiter, e.g. =(f:oo)= <===> =\left(f:oo\right)=                |
|              | =tse=      | For surrounding environment, equation <==> equation*, or align <==> align*           |
|              | =tsm=      | For surrounding math, =\(\)= <==> =\[\]=                                             |
|              | =dse=      | Delete surrounding environment                                                       |
|              | =dsc=      | Delete surrounding command, =\tilde{a}= => =a=                                       |
| Text objects | =ie=, =ae= | Select inside/around *environment*                                                   |
|              | =ic=, =ac= | Select inside/around *command* (macro)                                               |
|              | =im=, =am= | Select inside/around *math*                                                          |
|              | =id=, =ad= | Select inside/around delimiter (math parentheses), e.g. =()=, =[]=, =\left[\right]=. |
| Insert       | ?          | Brace movement                                                                       |
** Environments list with proposed key aliases
| Category        | env        | key alias |
|-----------------+------------+-----------|
| built in        | equation   | e         |
|                 | equation*  | E         |
|                 | figure     | f         |
|                 | itemize    |           |
|                 | enumerate  |           |
| amsmath         | align      | a         |
|                 | align*     | A         |
|                 | alignat    |           |
|                 | alignat*   |           |
|                 | eqnarray   |           |
|                 | flalign    |           |
|                 | flalign*   |           |
|                 | gather     |           |
|                 | gather*    |           |
|                 | multline   |           |
|                 | multline*  |           |
| common theorems | axiom      |           |
|                 | corollary  |           |
|                 | definition |           |
|                 | examples   |           |
|                 | exercise   |           |
|                 | lemma      |           |
|                 | proof      |           |
|                 | question   |           |
|                 | remark     |           |
|                 | theorem    |           |
** CDLaTeX accent & key list
"is style" means that the braces come before the macro, e.g {\displaystyle ...}
| key | macro             | is style |
|-----+-------------------+----------|
| .   | dot               |          |
| :   | ddot              |          |
| ~   | tilde             |          |
| N   | widetilde         |          |
| ^   | hat               |          |
| H   | widehat           |          |
| -   | bar               |          |
| T   | overline          |          |
| _   | underline         |          |
| {   | overbrace         |          |
| }   | underbrace        |          |
| >   | vec               |          |
| /   | grave             |          |
| \   | acute             |          |
| v   | check             |          |
| u   | breve             |          |
| m   | mbox              |          |
| c   | mathcal           |          |
| r   | mathrm/textrm     |          |
| i   | mathit/textit     |          |
| l   | NONE!!/textsl     |          |
| b   | mathbf/textbf     |          |
| e   | mathem/emph"      |          |
| y   | mathtt/texttt     |          |
| f   | mathsf/textsf     |          |
| 0   | textstyle         |          |
| 1   | displaystyle      | yes      |
| 2   | scriptstyle       | yes      |
| 3   | scriptscriptstyle | yes      |
** Things to add to Doom in another repo later
*** auto compilation mappings
*** =TeX-fold= flag
would define bindings and advices for =TeX-fold=
*** =cdlatex= flag
=cdlatex= has 4 functionalities:
- Snippets and environment templates: =fr<TAB>= => =\frac{}{}= These are made
obsolete by =yasnippet= and should be disabled.
- Tab key is configured for a general useful movement inside snippets
- Fast insertion of specific macros: =`a= => =\alpha=
- Fast accent insertion: =a'~= => =\tilde{a}=

Our cdlatex config should just disable the snippets and the tab key.
